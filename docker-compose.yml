volumes:
  database:
    driver: local
  redis:
    driver: local
  prometheus:
    driver: local
  grafana:
    driver: local

services:
  postgres:
    image: docker.io/library/postgres:16-alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    ports:
      - 127.0.0.1:10802:5432
    volumes:
      - database:/var/lib/postgresql/data
      - ./init.sh/:/docker-entrypoint-initdb.d/init.sh
    environment:
      POSTGRES_USER: ${PG_ADMIN_USERNAME}
      POSTGRES_PASSWORD: ${PG_ADMIN_PASSWORD}
      POSTGRES_DB: ${PG_ADMIN_DATABASE}
      PG_APP_USERNAME: ${PG_APP_USERNAME}
      PG_APP_PASSWORD: ${PG_APP_PASSWORD}
      PG_APP_DATABASE: ${PG_APP_DATABASE}

  redis:
    image: docker.io/library/redis:alpine
    command: --save 60 1 --loglevel warning
    restart: unless-stopped
    ports:
      - 127.0.0.1:10803:6379
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    volumes:
      - redis:/data

  backcat_server:
    image: cr.yandex/crpi9mn4oi4e8mmo9s1a/backcat:latest
    build:
      context: .
      dockerfile: dockerfile
    container_name: backcat-server
    restart: unless-stopped
    ports:
      - 127.0.0.1:10804:8080
    volumes:
      - ./config.toml:/app/config.toml
    environment:
      GRANIAN_INTERFACE: asgi
      GRANIAN_HOST: ${GRANIAN_HOST:-0.0.0.0}
      GRANIAN_PORT: ${GRANIAN_PORT:-8080}
      GRANIAN_WORKERS: ${GRANIAN_WORKERS:-4}
      GRANIAN_RUNTIME_THREADS: ${GRANIAN_RUNTIME_THREADS:-10}
      GRANIAN_RUNTIME_MODE: ${GRANIAN_RUNTIME_MODE:-mt}
      GRANIAN_LOOP: ${GRANIAN_LOOP:-uvloop}
      GRANIAN_BACKLOG: ${GRANIAN_BACKLOG:-1024}
      GRANIAN_LOG_ENABLED: ${GRANIAN_LOG_ENABLED:-false}
      GRANIAN_LOG_LEVEL: ${GRANIAN_LOG_LEVEL:-info}
      GRANIAN_URL_PATH_PREFIX: ${GRANIAN_URL_PATH_PREFIX:-/}
      GRANIAN_RESPAWN_FAILED_WORKERS: ${GRANIAN_RESPAWN_FAILED_WORKERS:-true}
      #
      POSTGRES_HOSTNAME: postgres
      POSTGRES_USERNAME: ${PG_APP_USERNAME}
      POSTGRES_PASSWORD: ${PG_APP_PASSWORD}
      POSTGRES_DATABASE: ${PG_APP_DATABASE}
    command: ["uv", "-q", "run", "granian", "backcat.cmd.server:app"]
    depends_on:
      - postgres

  prometheus:
    image: prom/prometheus:v3.3.0
    container_name: hardcats-prometheus
    restart: unless-stopped
    ports:
      - 127.0.0.1:10805:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - .prometheus:/prometheus

  grafana:
    image: grafana/grafana-oss:11.6.1
    container_name: hardcats-grafana
    restart: unless-stopped
    environment:
      GF_PLUGINS_PREINSTALL: grafana-clock-panel,grafana-simple-json-datasource
      GF_LOG_MODE: console file

    ports:
      - 127.0.0.1:10806:3000
    volumes:
      - grafana:/var/lib/grafana
      - ./grafana.ini:/etc/grafana/grafana.ini

  node_exporter:
    image: prom/node-exporter:v1.9.1
    container_name: hardcats-node-exporter
    restart: unless-stopped
    command:
      - --path.rootfs=/host
    ports:
      - 127.0.0.1:10807:9100
    network_mode: host
    pid: host
    volumes:
      - /:/host:ro,rslave

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.52.0
    container_name: hardcats-cadvisor
    restart: unless-stopped
    privileged: true
    devices:
      - /dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    ports:
      - 127.0.0.1:10808:8080
