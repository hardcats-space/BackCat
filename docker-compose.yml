volumes:
  database:
    driver: local
  redis:
    driver: local

services:
  postgresql:
    image: docker.io/library/postgres:16-alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    ports:
      - 5432:5432
    volumes:
      - database:/var/lib/postgresql/data
      - ./init.sh/:/docker-entrypoint-initdb.d/init.sh
    environment:
      POSTGRES_PASSWORD: ${PG_AUTHENTIK_PASSWORD}
      POSTGRES_USER: ${PG_AUTHENTIK_USERNAME}
      POSTGRES_DB: ${PG_AUTHENTIK_DATABASE}
      PG_APP_USERNAME: ${PG_APP_USERNAME}
      PG_APP_PASSWORD: ${PG_APP_PASSWORD}
      PG_APP_DATABASE: ${PG_APP_DATABASE}

  redis:
    image: docker.io/library/redis:alpine
    command: --save 60 1 --loglevel warning
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    volumes:
      - redis:/data

  backcat_server:
    build:
      context: .
      dockerfile: dockerfile
    container_name: blackcat-server
    restart: unless-stopped
    ports:
      - 127.0.0.1:10804:8080
    volumes:
      - ./config.toml:/app/config.toml
    environment:
      GRANIAN_INTERFACE: asgi
      GRANIAN_HOST: ${GRANIAN_HOST:-0.0.0.0}
      GRANIAN_PORT: ${GRANIAN_PORT:-8080}
      GRANIAN_WORKERS: ${GRANIAN_WORKERS:-4}
      GRANIAN_RUNTIME_THREADS: ${GRANIAN_RUNTIME_THREADS:-10}
      GRANIAN_RUNTIME_MODE: ${GRANIAN_RUNTIME_MODE:-mt}
      GRANIAN_LOOP: ${GRANIAN_LOOP:-uvloop}
      GRANIAN_BACKLOG: ${GRANIAN_BACKLOG:-1024}
      GRANIAN_LOG_ENABLED: ${GRANIAN_LOG_ENABLED:-false}
      GRANIAN_LOG_LEVEL: ${GRANIAN_LOG_LEVEL:-info}
      GRANIAN_URL_PATH_PREFIX: ${GRANIAN_URL_PATH_PREFIX:-/}
      GRANIAN_RESPAWN_FAILED_WORKERS: ${GRANIAN_RESPAWN_FAILED_WORKERS:-true}
      #
      POSTGRES_HOSTNAME: postgresql
      POSTGRES_USERNAME: ${PG_APP_USERNAME}
      POSTGRES_PASSWORD: ${PG_APP_PASSWORD}
      POSTGRES_DATABASE: ${PG_APP_DATABASE}
    command: ["uv", "-q", "run", "granian", "backcat.cmd.server:app"]
